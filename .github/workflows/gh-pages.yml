name: Build website and deploy to gh-pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3
      
      - name: Set up Git
        run: |
          export HEAD_COMMIT_USER_EMAIL=$(git log -1 --pretty=format:%ae)
          export HEAD_COMMIT_USER_NAME=$(git log -1 --pretty=format:%an)
          git config --global user.email "${HEAD_COMMIT_USER_EMAIL}"
          git config --global user.name "${HEAD_COMMIT_USER_NAME}"
          echo "${{ secrets.GITHUB_TOKEN }}" | git credential approve
      
      - name: Checkout www to www
        run: |
          git clone --depth 1 --branch www https://github.com/${{ github.repository }}.git www

      - name: Build site artifacts
        run: |
          # Build the site.
          # Is just a smiple copy of files into the www, but could be running of NPM commands etc.
          cp ./index.html ./www

      - name: Deploy site artifacts
        run: |
          # Deploy the site.
          # Simply commit and push the www branch
          export HEAD_COMMIT_LOG=$(git log -1 --pretty=%B)
          git add ./
          git commit --allow-empty -am "${HEAD_COMMIT_LOG}"
          git push origin www -f
        working-directory: www
